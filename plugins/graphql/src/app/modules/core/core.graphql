directive @field(at: FieldAtArgument!, default: FieldDefaultArgument) on FIELD_DEFINITION
directive @relation(type: String, interface: String, kind: String) on FIELD_DEFINITION
directive @extend(interface: String, when: ExtendWhenArgument, is: ExtendIsArgument) on INTERFACE

scalar FieldAtArgument
scalar FieldDefaultArgument
scalar ExtendWhenArgument
scalar ExtendIsArgument

interface Node { id: ID! }

interface Connection @extend {
  pageInfo: PageInfo!
  edges: [Edge!]!
  total: Int
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

interface Edge @extend {
  cursor: String!
  node: Node!
}

type Query {
  node(id: ID!): Node
}
